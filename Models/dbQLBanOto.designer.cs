#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBanOto.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBANOTO")]
	public partial class dbQLBanOtoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertDONGXE(DONGXE instance);
    partial void UpdateDONGXE(DONGXE instance);
    partial void DeleteDONGXE(DONGXE instance);
    partial void InsertGIO(GIO instance);
    partial void UpdateGIO(GIO instance);
    partial void DeleteGIO(GIO instance);
    partial void InsertGOPY(GOPY instance);
    partial void UpdateGOPY(GOPY instance);
    partial void DeleteGOPY(GOPY instance);
    partial void InsertHANGXE(HANGXE instance);
    partial void UpdateHANGXE(HANGXE instance);
    partial void DeleteHANGXE(HANGXE instance);
    partial void InsertLIENHE(LIENHE instance);
    partial void UpdateLIENHE(LIENHE instance);
    partial void DeleteLIENHE(LIENHE instance);
    partial void InsertPHUONGTHUC(PHUONGTHUC instance);
    partial void UpdatePHUONGTHUC(PHUONGTHUC instance);
    partial void DeletePHUONGTHUC(PHUONGTHUC instance);
    partial void InsertTUVAN(TUVAN instance);
    partial void UpdateTUVAN(TUVAN instance);
    partial void DeleteTUVAN(TUVAN instance);
    partial void InsertXE(XE instance);
    partial void UpdateXE(XE instance);
    partial void DeleteXE(XE instance);
    partial void InsertYEUCAU(YEUCAU instance);
    partial void UpdateYEUCAU(YEUCAU instance);
    partial void DeleteYEUCAU(YEUCAU instance);
    #endregion
		
		public dbQLBanOtoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLBANOTOConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanOtoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanOtoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanOtoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanOtoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<DONGXE> DONGXEs
		{
			get
			{
				return this.GetTable<DONGXE>();
			}
		}
		
		public System.Data.Linq.Table<GIO> GIOs
		{
			get
			{
				return this.GetTable<GIO>();
			}
		}
		
		public System.Data.Linq.Table<GOPY> GOPies
		{
			get
			{
				return this.GetTable<GOPY>();
			}
		}
		
		public System.Data.Linq.Table<HANGXE> HANGXEs
		{
			get
			{
				return this.GetTable<HANGXE>();
			}
		}
		
		public System.Data.Linq.Table<LIENHE> LIENHEs
		{
			get
			{
				return this.GetTable<LIENHE>();
			}
		}
		
		public System.Data.Linq.Table<PHUONGTHUC> PHUONGTHUCs
		{
			get
			{
				return this.GetTable<PHUONGTHUC>();
			}
		}
		
		public System.Data.Linq.Table<TUVAN> TUVANs
		{
			get
			{
				return this.GetTable<TUVAN>();
			}
		}
		
		public System.Data.Linq.Table<XE> XEs
		{
			get
			{
				return this.GetTable<XE>();
			}
		}
		
		public System.Data.Linq.Table<YEUCAU> YEUCAUs
		{
			get
			{
				return this.GetTable<YEUCAU>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserAdmin;
		
		private string _PassAdmin;
		
		private string _Hoten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnPassAdminChanging(string value);
    partial void OnPassAdminChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PassAdmin
		{
			get
			{
				return this._PassAdmin;
			}
			set
			{
				if ((this._PassAdmin != value))
				{
					this.OnPassAdminChanging(value);
					this.SendPropertyChanging();
					this._PassAdmin = value;
					this.SendPropertyChanged("PassAdmin");
					this.OnPassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONGXE")]
	public partial class DONGXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDX;
		
		private string _TenDX;
		
		private EntitySet<XE> _XEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDXChanging(int value);
    partial void OnMaDXChanged();
    partial void OnTenDXChanging(string value);
    partial void OnTenDXChanged();
    #endregion
		
		public DONGXE()
		{
			this._XEs = new EntitySet<XE>(new Action<XE>(this.attach_XEs), new Action<XE>(this.detach_XEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDX
		{
			get
			{
				return this._MaDX;
			}
			set
			{
				if ((this._MaDX != value))
				{
					this.OnMaDXChanging(value);
					this.SendPropertyChanging();
					this._MaDX = value;
					this.SendPropertyChanged("MaDX");
					this.OnMaDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDX", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDX
		{
			get
			{
				return this._TenDX;
			}
			set
			{
				if ((this._TenDX != value))
				{
					this.OnTenDXChanging(value);
					this.SendPropertyChanging();
					this._TenDX = value;
					this.SendPropertyChanged("TenDX");
					this.OnTenDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONGXE_XE", Storage="_XEs", ThisKey="MaDX", OtherKey="MaDX")]
		public EntitySet<XE> XEs
		{
			get
			{
				return this._XEs;
			}
			set
			{
				this._XEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.DONGXE = this;
		}
		
		private void detach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.DONGXE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIO")]
	public partial class GIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaG;
		
		private System.TimeSpan _Gio1;
		
		private EntitySet<YEUCAU> _YEUCAUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGChanging(int value);
    partial void OnMaGChanged();
    partial void OnGio1Changing(System.TimeSpan value);
    partial void OnGio1Changed();
    #endregion
		
		public GIO()
		{
			this._YEUCAUs = new EntitySet<YEUCAU>(new Action<YEUCAU>(this.attach_YEUCAUs), new Action<YEUCAU>(this.detach_YEUCAUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaG
		{
			get
			{
				return this._MaG;
			}
			set
			{
				if ((this._MaG != value))
				{
					this.OnMaGChanging(value);
					this.SendPropertyChanging();
					this._MaG = value;
					this.SendPropertyChanged("MaG");
					this.OnMaGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Gio", Storage="_Gio1", DbType="Time NOT NULL")]
		public System.TimeSpan Gio1
		{
			get
			{
				return this._Gio1;
			}
			set
			{
				if ((this._Gio1 != value))
				{
					this.OnGio1Changing(value);
					this.SendPropertyChanging();
					this._Gio1 = value;
					this.SendPropertyChanged("Gio1");
					this.OnGio1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIO_YEUCAU", Storage="_YEUCAUs", ThisKey="MaG", OtherKey="MaG")]
		public EntitySet<YEUCAU> YEUCAUs
		{
			get
			{
				return this._YEUCAUs;
			}
			set
			{
				this._YEUCAUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YEUCAUs(YEUCAU entity)
		{
			this.SendPropertyChanging();
			entity.GIO = this;
		}
		
		private void detach_YEUCAUs(YEUCAU entity)
		{
			this.SendPropertyChanging();
			entity.GIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GOPY")]
	public partial class GOPY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGY;
		
		private string _HoTen;
		
		private string _Dienthoai;
		
		private string _Email;
		
		private string _Tieude;
		
		private string _NoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGYChanging(int value);
    partial void OnMaGYChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTieudeChanging(string value);
    partial void OnTieudeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public GOPY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGY
		{
			get
			{
				return this._MaGY;
			}
			set
			{
				if ((this._MaGY != value))
				{
					this.OnMaGYChanging(value);
					this.SendPropertyChanging();
					this._MaGY = value;
					this.SendPropertyChanged("MaGY");
					this.OnMaGYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="VarChar(50)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tieude", DbType="VarChar(100)")]
		public string Tieude
		{
			get
			{
				return this._Tieude;
			}
			set
			{
				if ((this._Tieude != value))
				{
					this.OnTieudeChanging(value);
					this.SendPropertyChanging();
					this._Tieude = value;
					this.SendPropertyChanged("Tieude");
					this.OnTieudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGXE")]
	public partial class HANGXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHX;
		
		private string _TenHX;
		
		private string _Diachi;
		
		private string _DienThoai;
		
		private EntitySet<XE> _XEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHXChanging(int value);
    partial void OnMaHXChanged();
    partial void OnTenHXChanging(string value);
    partial void OnTenHXChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public HANGXE()
		{
			this._XEs = new EntitySet<XE>(new Action<XE>(this.attach_XEs), new Action<XE>(this.detach_XEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHX
		{
			get
			{
				return this._MaHX;
			}
			set
			{
				if ((this._MaHX != value))
				{
					this.OnMaHXChanging(value);
					this.SendPropertyChanging();
					this._MaHX = value;
					this.SendPropertyChanged("MaHX");
					this.OnMaHXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHX", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHX
		{
			get
			{
				return this._TenHX;
			}
			set
			{
				if ((this._TenHX != value))
				{
					this.OnTenHXChanging(value);
					this.SendPropertyChanging();
					this._TenHX = value;
					this.SendPropertyChanged("TenHX");
					this.OnTenHXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(200)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(50)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGXE_XE", Storage="_XEs", ThisKey="MaHX", OtherKey="MaHX")]
		public EntitySet<XE> XEs
		{
			get
			{
				return this._XEs;
			}
			set
			{
				this._XEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.HANGXE = this;
		}
		
		private void detach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.HANGXE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIENHE")]
	public partial class LIENHE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLH;
		
		private string _Diachi;
		
		private string _Email;
		
		private string _SDT;
		
		private string _FB;
		
		private string _INS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHChanging(int value);
    partial void OnMaLHChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnFBChanging(string value);
    partial void OnFBChanged();
    partial void OnINSChanging(string value);
    partial void OnINSChanged();
    #endregion
		
		public LIENHE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FB", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FB
		{
			get
			{
				return this._FB;
			}
			set
			{
				if ((this._FB != value))
				{
					this.OnFBChanging(value);
					this.SendPropertyChanging();
					this._FB = value;
					this.SendPropertyChanged("FB");
					this.OnFBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INS", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string INS
		{
			get
			{
				return this._INS;
			}
			set
			{
				if ((this._INS != value))
				{
					this.OnINSChanging(value);
					this.SendPropertyChanging();
					this._INS = value;
					this.SendPropertyChanged("INS");
					this.OnINSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHUONGTHUC")]
	public partial class PHUONGTHUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPT;
		
		private string _TenPT;
		
		private EntitySet<TUVAN> _TUVANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPTChanging(int value);
    partial void OnMaPTChanged();
    partial void OnTenPTChanging(string value);
    partial void OnTenPTChanged();
    #endregion
		
		public PHUONGTHUC()
		{
			this._TUVANs = new EntitySet<TUVAN>(new Action<TUVAN>(this.attach_TUVANs), new Action<TUVAN>(this.detach_TUVANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPT
		{
			get
			{
				return this._MaPT;
			}
			set
			{
				if ((this._MaPT != value))
				{
					this.OnMaPTChanging(value);
					this.SendPropertyChanging();
					this._MaPT = value;
					this.SendPropertyChanged("MaPT");
					this.OnMaPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenPT
		{
			get
			{
				return this._TenPT;
			}
			set
			{
				if ((this._TenPT != value))
				{
					this.OnTenPTChanging(value);
					this.SendPropertyChanging();
					this._TenPT = value;
					this.SendPropertyChanged("TenPT");
					this.OnTenPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTHUC_TUVAN", Storage="_TUVANs", ThisKey="MaPT", OtherKey="MaPT")]
		public EntitySet<TUVAN> TUVANs
		{
			get
			{
				return this._TUVANs;
			}
			set
			{
				this._TUVANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TUVANs(TUVAN entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTHUC = this;
		}
		
		private void detach_TUVANs(TUVAN entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTHUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUVAN")]
	public partial class TUVAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTV;
		
		private string _HoTen;
		
		private string _Dienthoai;
		
		private string _Email;
		
		private System.Nullable<int> _MaPT;
		
		private EntityRef<PHUONGTHUC> _PHUONGTHUC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTVChanging(int value);
    partial void OnMaTVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMaPTChanging(System.Nullable<int> value);
    partial void OnMaPTChanged();
    #endregion
		
		public TUVAN()
		{
			this._PHUONGTHUC = default(EntityRef<PHUONGTHUC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTV
		{
			get
			{
				return this._MaTV;
			}
			set
			{
				if ((this._MaTV != value))
				{
					this.OnMaTVChanging(value);
					this.SendPropertyChanging();
					this._MaTV = value;
					this.SendPropertyChanged("MaTV");
					this.OnMaTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPT", DbType="Int")]
		public System.Nullable<int> MaPT
		{
			get
			{
				return this._MaPT;
			}
			set
			{
				if ((this._MaPT != value))
				{
					if (this._PHUONGTHUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPTChanging(value);
					this.SendPropertyChanging();
					this._MaPT = value;
					this.SendPropertyChanged("MaPT");
					this.OnMaPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTHUC_TUVAN", Storage="_PHUONGTHUC", ThisKey="MaPT", OtherKey="MaPT", IsForeignKey=true)]
		public PHUONGTHUC PHUONGTHUC
		{
			get
			{
				return this._PHUONGTHUC.Entity;
			}
			set
			{
				PHUONGTHUC previousValue = this._PHUONGTHUC.Entity;
				if (((previousValue != value) 
							|| (this._PHUONGTHUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHUONGTHUC.Entity = null;
						previousValue.TUVANs.Remove(this);
					}
					this._PHUONGTHUC.Entity = value;
					if ((value != null))
					{
						value.TUVANs.Add(this);
						this._MaPT = value.MaPT;
					}
					else
					{
						this._MaPT = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHUONGTHUC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XE")]
	public partial class XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maxe;
		
		private string _Tenxe;
		
		private System.Nullable<decimal> _Giaban;
		
		private string _Mota;
		
		private string _Anhxe;
		
		private System.Nullable<System.DateTime> _Namsanxuat;
		
		private System.Nullable<int> _Soluongton;
		
		private string _Uudai;
		
		private System.Nullable<int> _MaDX;
		
		private System.Nullable<int> _MaHX;
		
		private EntitySet<YEUCAU> _YEUCAUs;
		
		private EntityRef<DONGXE> _DONGXE;
		
		private EntityRef<HANGXE> _HANGXE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaxeChanging(int value);
    partial void OnMaxeChanged();
    partial void OnTenxeChanging(string value);
    partial void OnTenxeChanged();
    partial void OnGiabanChanging(System.Nullable<decimal> value);
    partial void OnGiabanChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnAnhxeChanging(string value);
    partial void OnAnhxeChanged();
    partial void OnNamsanxuatChanging(System.Nullable<System.DateTime> value);
    partial void OnNamsanxuatChanged();
    partial void OnSoluongtonChanging(System.Nullable<int> value);
    partial void OnSoluongtonChanged();
    partial void OnUudaiChanging(string value);
    partial void OnUudaiChanged();
    partial void OnMaDXChanging(System.Nullable<int> value);
    partial void OnMaDXChanged();
    partial void OnMaHXChanging(System.Nullable<int> value);
    partial void OnMaHXChanged();
    #endregion
		
		public XE()
		{
			this._YEUCAUs = new EntitySet<YEUCAU>(new Action<YEUCAU>(this.attach_YEUCAUs), new Action<YEUCAU>(this.detach_YEUCAUs));
			this._DONGXE = default(EntityRef<DONGXE>);
			this._HANGXE = default(EntityRef<HANGXE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maxe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Maxe
		{
			get
			{
				return this._Maxe;
			}
			set
			{
				if ((this._Maxe != value))
				{
					this.OnMaxeChanging(value);
					this.SendPropertyChanging();
					this._Maxe = value;
					this.SendPropertyChanged("Maxe");
					this.OnMaxeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenxe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Tenxe
		{
			get
			{
				return this._Tenxe;
			}
			set
			{
				if ((this._Tenxe != value))
				{
					this.OnTenxeChanging(value);
					this.SendPropertyChanging();
					this._Tenxe = value;
					this.SendPropertyChanged("Tenxe");
					this.OnTenxeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giaban", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Giaban
		{
			get
			{
				return this._Giaban;
			}
			set
			{
				if ((this._Giaban != value))
				{
					this.OnGiabanChanging(value);
					this.SendPropertyChanging();
					this._Giaban = value;
					this.SendPropertyChanged("Giaban");
					this.OnGiabanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhxe", DbType="VarChar(50)")]
		public string Anhxe
		{
			get
			{
				return this._Anhxe;
			}
			set
			{
				if ((this._Anhxe != value))
				{
					this.OnAnhxeChanging(value);
					this.SendPropertyChanging();
					this._Anhxe = value;
					this.SendPropertyChanged("Anhxe");
					this.OnAnhxeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namsanxuat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Namsanxuat
		{
			get
			{
				return this._Namsanxuat;
			}
			set
			{
				if ((this._Namsanxuat != value))
				{
					this.OnNamsanxuatChanging(value);
					this.SendPropertyChanging();
					this._Namsanxuat = value;
					this.SendPropertyChanged("Namsanxuat");
					this.OnNamsanxuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluongton", DbType="Int")]
		public System.Nullable<int> Soluongton
		{
			get
			{
				return this._Soluongton;
			}
			set
			{
				if ((this._Soluongton != value))
				{
					this.OnSoluongtonChanging(value);
					this.SendPropertyChanging();
					this._Soluongton = value;
					this.SendPropertyChanged("Soluongton");
					this.OnSoluongtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uudai", DbType="NVarChar(MAX)")]
		public string Uudai
		{
			get
			{
				return this._Uudai;
			}
			set
			{
				if ((this._Uudai != value))
				{
					this.OnUudaiChanging(value);
					this.SendPropertyChanging();
					this._Uudai = value;
					this.SendPropertyChanged("Uudai");
					this.OnUudaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDX", DbType="Int")]
		public System.Nullable<int> MaDX
		{
			get
			{
				return this._MaDX;
			}
			set
			{
				if ((this._MaDX != value))
				{
					if (this._DONGXE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDXChanging(value);
					this.SendPropertyChanging();
					this._MaDX = value;
					this.SendPropertyChanged("MaDX");
					this.OnMaDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHX", DbType="Int")]
		public System.Nullable<int> MaHX
		{
			get
			{
				return this._MaHX;
			}
			set
			{
				if ((this._MaHX != value))
				{
					if (this._HANGXE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHXChanging(value);
					this.SendPropertyChanging();
					this._MaHX = value;
					this.SendPropertyChanged("MaHX");
					this.OnMaHXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XE_YEUCAU", Storage="_YEUCAUs", ThisKey="Maxe", OtherKey="Maxe")]
		public EntitySet<YEUCAU> YEUCAUs
		{
			get
			{
				return this._YEUCAUs;
			}
			set
			{
				this._YEUCAUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONGXE_XE", Storage="_DONGXE", ThisKey="MaDX", OtherKey="MaDX", IsForeignKey=true)]
		public DONGXE DONGXE
		{
			get
			{
				return this._DONGXE.Entity;
			}
			set
			{
				DONGXE previousValue = this._DONGXE.Entity;
				if (((previousValue != value) 
							|| (this._DONGXE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONGXE.Entity = null;
						previousValue.XEs.Remove(this);
					}
					this._DONGXE.Entity = value;
					if ((value != null))
					{
						value.XEs.Add(this);
						this._MaDX = value.MaDX;
					}
					else
					{
						this._MaDX = default(Nullable<int>);
					}
					this.SendPropertyChanged("DONGXE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGXE_XE", Storage="_HANGXE", ThisKey="MaHX", OtherKey="MaHX", IsForeignKey=true)]
		public HANGXE HANGXE
		{
			get
			{
				return this._HANGXE.Entity;
			}
			set
			{
				HANGXE previousValue = this._HANGXE.Entity;
				if (((previousValue != value) 
							|| (this._HANGXE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGXE.Entity = null;
						previousValue.XEs.Remove(this);
					}
					this._HANGXE.Entity = value;
					if ((value != null))
					{
						value.XEs.Add(this);
						this._MaHX = value.MaHX;
					}
					else
					{
						this._MaHX = default(Nullable<int>);
					}
					this.SendPropertyChanged("HANGXE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YEUCAUs(YEUCAU entity)
		{
			this.SendPropertyChanging();
			entity.XE = this;
		}
		
		private void detach_YEUCAUs(YEUCAU entity)
		{
			this.SendPropertyChanging();
			entity.XE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YEUCAU")]
	public partial class YEUCAU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaYC;
		
		private string _HoTen;
		
		private string _Dienthoai;
		
		private string _Email;
		
		private System.DateTime _Ngay;
		
		private System.Nullable<int> _MaG;
		
		private System.Nullable<int> _Maxe;
		
		private EntityRef<GIO> _GIO;
		
		private EntityRef<XE> _XE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaYCChanging(int value);
    partial void OnMaYCChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnMaGChanging(System.Nullable<int> value);
    partial void OnMaGChanged();
    partial void OnMaxeChanging(System.Nullable<int> value);
    partial void OnMaxeChanged();
    #endregion
		
		public YEUCAU()
		{
			this._GIO = default(EntityRef<GIO>);
			this._XE = default(EntityRef<XE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaYC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaYC
		{
			get
			{
				return this._MaYC;
			}
			set
			{
				if ((this._MaYC != value))
				{
					this.OnMaYCChanging(value);
					this.SendPropertyChanging();
					this._MaYC = value;
					this.SendPropertyChanged("MaYC");
					this.OnMaYCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="VarChar(50)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaG", DbType="Int")]
		public System.Nullable<int> MaG
		{
			get
			{
				return this._MaG;
			}
			set
			{
				if ((this._MaG != value))
				{
					if (this._GIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGChanging(value);
					this.SendPropertyChanging();
					this._MaG = value;
					this.SendPropertyChanged("MaG");
					this.OnMaGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maxe", DbType="Int")]
		public System.Nullable<int> Maxe
		{
			get
			{
				return this._Maxe;
			}
			set
			{
				if ((this._Maxe != value))
				{
					if (this._XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaxeChanging(value);
					this.SendPropertyChanging();
					this._Maxe = value;
					this.SendPropertyChanged("Maxe");
					this.OnMaxeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIO_YEUCAU", Storage="_GIO", ThisKey="MaG", OtherKey="MaG", IsForeignKey=true)]
		public GIO GIO
		{
			get
			{
				return this._GIO.Entity;
			}
			set
			{
				GIO previousValue = this._GIO.Entity;
				if (((previousValue != value) 
							|| (this._GIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIO.Entity = null;
						previousValue.YEUCAUs.Remove(this);
					}
					this._GIO.Entity = value;
					if ((value != null))
					{
						value.YEUCAUs.Add(this);
						this._MaG = value.MaG;
					}
					else
					{
						this._MaG = default(Nullable<int>);
					}
					this.SendPropertyChanged("GIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XE_YEUCAU", Storage="_XE", ThisKey="Maxe", OtherKey="Maxe", IsForeignKey=true)]
		public XE XE
		{
			get
			{
				return this._XE.Entity;
			}
			set
			{
				XE previousValue = this._XE.Entity;
				if (((previousValue != value) 
							|| (this._XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XE.Entity = null;
						previousValue.YEUCAUs.Remove(this);
					}
					this._XE.Entity = value;
					if ((value != null))
					{
						value.YEUCAUs.Add(this);
						this._Maxe = value.Maxe;
					}
					else
					{
						this._Maxe = default(Nullable<int>);
					}
					this.SendPropertyChanged("XE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
